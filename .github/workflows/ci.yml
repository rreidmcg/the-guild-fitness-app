name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack (pnpm/yarn support)
        run: corepack enable

      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "pm=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "pm=yarn" >> $GITHUB_OUTPUT
          else
            echo "pm=npm" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        run: |
          if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then pnpm install --frozen-lockfile;
          elif [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then yarn install --frozen-lockfile;
          else npm ci; fi

      - name: Typecheck (skips if no script)
        run: |
          if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then pnpm run -s typecheck || echo "no typecheck script";
          elif [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then yarn -s typecheck || echo "no typecheck script";
          else npm run -s typecheck || echo "no typecheck script"; fi

      - name: Lint (skips if no script)
        run: |
          if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then pnpm run -s lint || echo "no lint script";
          elif [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then yarn -s lint || echo "no lint script";
          else npm run -s lint || echo "no lint script"; fi

      - name: Build (fails if script exists and build breaks)
        run: |
          if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then pnpm run -s build || echo "no build script";
          elif [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then yarn -s build || echo "no build script";
          else npm run -s build || echo "no build script"; fi
